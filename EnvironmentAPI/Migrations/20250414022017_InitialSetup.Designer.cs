// <auto-generated />
using Microsoft.EntityFrameworkCore;
using EnvironmentAPI.Data;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnvironmentAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250414022017_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnvironmentAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnvironmentAPI.Models.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("EnvironmentAPI.Models.WorldObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("PositionX")
                        .HasColumnType("real");

                    b.Property<float>("PositionY")
                        .HasColumnType("real");

                    b.Property<float>("PositionZ")
                        .HasColumnType("real");

                    b.Property<string>("PrefabName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RotationX")
                        .HasColumnType("real");

                    b.Property<float>("RotationY")
                        .HasColumnType("real");

                    b.Property<float>("RotationZ")
                        .HasColumnType("real");

                    b.Property<float>("ScaleX")
                        .HasColumnType("real");

                    b.Property<float>("ScaleY")
                        .HasColumnType("real");

                    b.Property<float>("ScaleZ")
                        .HasColumnType("real");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("WorldObjects");
                });

            modelBuilder.Entity("EnvironmentAPI.Models.WorldObject", b =>
                {
                    b.HasOne("EnvironmentAPI.Models.World", "World")
                        .WithMany("WorldObjects")
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("World");
                });

            modelBuilder.Entity("EnvironmentAPI.Models.World", b =>
                {
                    b.Navigation("WorldObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
